this.state = {
	facilityNr : facilityNr, 
	areasize : areasize, 
	fromDate : fromDate, 
	movementacrossEU : movementacrossEU, 
	address : address, 
	maxcapacity : maxcapacity, 
	temporaryactivity : temporaryactivity, 
	specieskept : specieskept, 
	farmId : farmId, 
	type : type, 
	anläggningsnumber : anläggningsnumber, 
	breedingmaterials : breedingmaterials
}


this.state = {
	facilityNr : "", 
	areasize : "", 
	fromDate : "", 
	movementacrossEU : "", 
	address : "", 
	maxcapacity : "", 
	temporaryactivity : "", 
	specieskept : "", 
	farmId : "", 
	type : "", 
	anläggningsnumber : "", 
	breedingmaterials : ""
}



handleChange(event) {
	switch (event.target.id) {
		  case 'facilityNr': this.setState({ facilityNr: event.target.value }); break;
		  case 'areasize': this.setState({ areasize: event.target.value }); break;
		  case 'fromDate': this.setState({ fromDate: event.target.value }); break;
		  case 'movementacrossEU': this.setState({ movementacrossEU: event.target.value }); break;
		  case 'address': this.setState({ address: event.target.value }); break;
		  case 'maxcapacity': this.setState({ maxcapacity: event.target.value }); break;
		  case 'temporaryactivity': this.setState({ temporaryactivity: event.target.value }); break;
		  case 'specieskept': this.setState({ specieskept: event.target.value }); break;
		  case 'farmId': this.setState({ farmId: event.target.value }); break;
		  case 'type': this.setState({ type: event.target.value }); break;
		  case 'anläggningsnumber': this.setState({ anläggningsnumber: event.target.value }); break;
		  case 'breedingmaterials': this.setState({ breedingmaterials: event.target.value }); break;
		  default: return '';
	}
}



htmlFor="facilityNr"
name="facilityNr" id="facilityNr" onChange={this.handleChange.bind(this)} value={this.state.facilityNr}

htmlFor="areasize"
name="areasize" id="areasize" onChange={this.handleChange.bind(this)} value={this.state.areasize}

htmlFor="fromDate"
name="fromDate" id="fromDate" onChange={this.handleChange.bind(this)} value={this.state.fromDate}

htmlFor="movementacrossEU"
name="movementacrossEU" id="movementacrossEU" onChange={this.handleChange.bind(this)} value={this.state.movementacrossEU}

htmlFor="address"
name="address" id="address" onChange={this.handleChange.bind(this)} value={this.state.address}

htmlFor="maxcapacity"
name="maxcapacity" id="maxcapacity" onChange={this.handleChange.bind(this)} value={this.state.maxcapacity}

htmlFor="temporaryactivity"
name="temporaryactivity" id="temporaryactivity" onChange={this.handleChange.bind(this)} value={this.state.temporaryactivity}

htmlFor="specieskept"
name="specieskept" id="specieskept" onChange={this.handleChange.bind(this)} value={this.state.specieskept}

htmlFor="farmId"
name="farmId" id="farmId" onChange={this.handleChange.bind(this)} value={this.state.farmId}

htmlFor="type"
name="type" id="type" onChange={this.handleChange.bind(this)} value={this.state.type}

htmlFor="anläggningsnumber"
name="anläggningsnumber" id="anläggningsnumber" onChange={this.handleChange.bind(this)} value={this.state.anläggningsnumber}

htmlFor="breedingmaterials"
name="breedingmaterials" id="breedingmaterials" onChange={this.handleChange.bind(this)} value={this.state.breedingmaterials}




getJSON(){
	let jsondata =  {
		facilityNr : this.state.facilityNr, 
		areasize : this.state.areasize, 
		fromDate : this.state.fromDate, 
		movementacrossEU : this.state.movementacrossEU, 
		address : this.state.address, 
		maxcapacity : this.state.maxcapacity, 
		temporaryactivity : this.state.temporaryactivity, 
		specieskept : this.state.specieskept, 
		farmId : this.state.farmId, 
		type : this.state.type, 
		anläggningsnumber : this.state.anläggningsnumber, 
		breedingmaterials : this.state.breedingmaterials
	}
	return jsondata; 

}
